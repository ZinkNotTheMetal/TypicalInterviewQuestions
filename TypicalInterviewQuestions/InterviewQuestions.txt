1. What kind of type is a string?
	Reference
2. What kind of type is a double?
	Value
3. What keyword defines a custom value type?
	struct
4. Can a class have more than one direct base class?
	No
5. What keyword makes a member visible to inherited classes?
	protected
6. What keyword makes a class visible only within its assembly?
	internal
7. What keyword allows a method to be overridden?
	virtual
8. What keyword requires a method to be overridden?
	abstract
9. What keyword prevents a class from being used as a base class?
	sealed
10. What keyword returns true if a cast will succeed?
	is
11. What keyword returns null if a cast will not succeed?
	as
12. What keyword ensures code execution even if an exception occurs?
	finally
13. What keyword calls IDisposable.Dispose?
	using
14. What keyword constrains a generic type argument to derive from a particular class?
	where
15. What two keywords used together return IEnumerable<T>?
	yield return
16. What keyword would you use to define an inline variable in a LINQ query?
	let - did not know this
17. What keyword brings an extension method into scope?
	using - top of file
18. What keyword do you add to a delegate to force subscribers to use += or –=?
	event
19. What method do you call on a delegate to run it on a background thread?
	BeginInvoke
20. What keyword provides thread synchronization?
	lock

Overload vs Override
-Overloaded means that a method has the same name but different method signature
-Overriden means that a method shares the name and signature of a base or abstract class. But is overriden
	in the inheritted class

Abstract class vs Interface
	An abstract class can have shared state or functionality. An interface is only a promise to provide the
	 state or functionality. A good abstract class will reduce the amount of code that has to be rewritten 
	 because it's functionality or state can be shared. The interface has no defined information to be shared

Protected:
	A protected member is accessible from within the class in which it is declared, and from within any class 
	 derived from the class that declared this member.

Internal:
	Internal types or members are accessible only within files in the same assembly.

This means that a "procted internal" member (combination of these two) will be visible only to classes that 
derive from the class that declares that member *and* are declared in a file in the same assembly.

What is a static method?
	If you apply static keyword with any method, it is known as static method. 
	A static method belongs to the class rather than object of a class. 
	A static method invoked without the need for creating an instance of a class.

What is the difference between an interface and an abstract class?
	Interface is a contract that cannot have any functionality inside. Abstract classes may have abstract or non-abstract methods.
	 Non-abstract methods can have functionality housed inside so the inherited class doesn't need to duplicate that functionality.
	 Abstract methods are similar to an interface, it gives them a contract that the inherited class must adhere to.

Explain the difference between managed and unmanaged code.
	Managed is an environment where you have automatic memory management, garbage collection, type safety, ... unmanaged is everything else.

What are extension methods in C#?  Examples.
	Extension methods are a special kind of static method, but they are called as if they were instance methods on the extended type
	LINQ, ToString, Split...
 
What is a left outer join?  Example
	Outer is an optional keyword in sql server. That being said this would be a LEFT JOIN.
	A LEFT JOIN gets all data from the left (or first table) and joins it to the right (or second table) matching null where they do not line up.
	Customers LEFT JOIN Orders (will show all customers but they might not have any orders which will return null)

What are some advantages to using Stored Procedures? Disadvantages?
	Advantages
	*Testability outside of the application
	*Security
	*Speed / Optimization
	Disadvantages
	-Errors - found in runtime
	-Stored procedure code is not as robust as app code, particularly in the area of looping (not to mention that iterative constructs, like cursors, are slow and processor intensive)
	-Lot of overhead for simple stored procedures

What are advantages to using indexes?  Disadvantages?
	Indexes (typically) speed up SELECT's and slow down INSERT's.

Should you use ADO.NET DataReader or Dataset?  Why?
	It depends on your needs. One of the most important differences is that a DataReader will retain an open connection 
	to your database until you're done with it while a DataSet will be an in-memory object. If you bind a control to a 
	DataReader then it's still open. In addition, a DataReader is a forward only approach to reading data that can't be 
	manipulated. With a DataSet you can move back and forth and manipulate the data as you see fit.

Inheritance vs Composition.  Which one should you choose?
	Favor composition over inheritance